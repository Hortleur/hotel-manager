// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String?
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Role      Role     @relation(fields: [roleId], references: [id])
  roleId    Int
}

model Role {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  users     User[]
}

model Clients {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  email     String
  phone     String
  address   String
  city      String
  state     String
  zip       String
  country   String
  notes     String
  reservations Reservations[]
  Reviews   Review[]
}

model Reservations {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  client    Clients  @relation(fields: [clientId], references: [id])
  clientId  Int
  room      Room     @relation(fields: [roomId], references: [id])
  roomId    Int
}

model Room {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  capacity  Int
  price     Int
  reservations Reservations[]
  roomType  RoomType @relation(fields: [roomTypeId], references: [id])
  roomTypeId Int
  Reviews   Review[]
}

model RoomType {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  rooms     Room[]
}

model Review {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  text      String
  client    Clients  @relation(fields: [clientId], references: [id])
  clientId  Int
  room      Room     @relation(fields: [roomId], references: [id])
  roomId    Int
  published Boolean  @default(false)
}